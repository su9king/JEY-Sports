let noticeToken, getData;
let totalDues = 0;
let totalDuesPaid = 0;

//////////////////// Step0 : ÌöåÏõêÏù∏Ï¶ù, ÏÇ¨Ïù¥ÎìúÎ∞î, Îí§Î°úÍ∞ÄÍ∏∞ Ï¥àÍ∏∞ ÏÑ∏ÌåÖ ////////////////////
window.onload = async function() {
    const page = 'TotalDuesPage';
    userToken = sessionStorage.getItem('userToken');
    groupToken = sessionStorage.getItem('groupToken');
    userPermission = sessionStorage.getItem('userPermission');

    const data = `userToken=${userToken}&groupToken=${groupToken}&userPermission=${userPermission}`;
    
    const response = await certification(page, data);
    getData = response.resources;
    
    if (response.result == 0) {
        alert('Î°úÍ∑∏Ïù∏ ÌõÑ ÏÇ¨Ïö©Ìï¥Ï£ºÏÑ∏Ïöî!');
        window.location.href = '/WarningPage.html';
        return;
    }

    loadSidebar(page, userPermission, response);

    // ÌöåÎπÑ Î¶¨Ïä§Ìä∏ ÌÖåÏù¥Î∏î
    const tableContainer = document.getElementById("table-container");
    const table = generateTable(getData);
    tableContainer.appendChild(table);

    initSearchFunctionality();
    createLedgerContainer();

    // Îí§Î°úÍ∞ÄÍ∏∞ Î≤ÑÌäº
    document.getElementById('backButton').addEventListener('click', function() {
        window.history.back();
    });
}

// JSON Îç∞Ïù¥ÌÑ∞Î•º HTML ÌÖåÏù¥Î∏îÎ°ú Î≥ÄÌôòÌïòÎäî Ìï®Ïàò
function generateTable(getData) {
    const table = document.createElement("table");
    table.id = "duesTable"; // ÌÖåÏù¥Î∏îÏóê ID Ï∂îÍ∞Ä

    // ÌÖåÏù¥Î∏î Ìó§Îçî ÏÉùÏÑ±
    const thead = table.createTHead();
    const headerRow = thead.insertRow();

    // Ï≤´ Î≤àÏß∏ Îπà Ïπ∏ Ìó§Îçî
    const emptyHeader = document.createElement("th");
    headerRow.appendChild(emptyHeader);

    // Í∞Å Í≥µÏßÄÏóê ÎåÄÌïú Ìó§Îçî Ï∂îÍ∞Ä
    const headers = ['Í≥µÏßÄ ÎÇ†Ïßú', 'ÏßÄÏ∂ú ÎÇ¥Ïó≠', 'Í∏àÏï°', 'ÎÇ©Î∂ÄÎêú ÌöåÎπÑ', 'ÎÇ©Î∂Ä Ïó¨Î∂Ä'];
    headers.forEach(text => {
        const th = document.createElement("th");
        th.textContent = text;
        headerRow.appendChild(th);
    });

    // ÌÖåÏù¥Î∏î Î≥∏Î¨∏ ÏÉùÏÑ±
    const tbody = table.createTBody();

    // Í∞Å Í≥µÏßÄÏóê ÎåÄÌïú Ìñâ Ï∂îÍ∞Ä
    getData.forEach((data, noticeIndex) => {
        const notice = data[0]; // Í≥µÏßÄ Ï†ïÎ≥¥Î•º Í∞ÄÏ†∏Ïò¥
        const noticeRow = tbody.insertRow();

        // Ï≤´ Î≤àÏß∏ ÏÖÄ: noticeTypeÏóê Îî∞Îùº Îã§Î•∏ ÏÉâÏÉÅÏùò ÌÖçÏä§Ìä∏Î°ú ÌëúÏãú
        const noticeTypeCell = noticeRow.insertCell();
        noticeTypeCell.style.fontWeight = 'bold';
        switch (notice.noticeType) {
            case 2:
                noticeTypeCell.style.color = 'green';
                noticeTypeCell.textContent = 'ÌöåÎπÑ';
                break;
            case 3:
                noticeTypeCell.style.color = 'blue';
                noticeTypeCell.textContent = 'ÏûÖÍ∏à';
                break;
            case 4:
                noticeTypeCell.style.color = 'red';
                noticeTypeCell.textContent = 'ÏßÄÏ∂ú';
                break;
        }

        // Í≥µÏßÄ ÎÇ†Ïßú ÏÖÄ
        const noticeDateCell = noticeRow.insertCell();
        noticeDateCell.textContent = notice.noticeEditDate;

        // ÏßÄÏ∂ú ÎÇ¥Ïó≠ ÏÖÄ (ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï∂îÍ∞Ä)
        const noticeTitleCell = noticeRow.insertCell();
        noticeTitleCell.textContent = `üîó${notice.noticeTitle}`;
        noticeTitleCell.style.overflow = 'auto';
        noticeTitleCell.style.whiteSpace = 'nowrap';
        noticeTitleCell.style.cursor = 'pointer';

        noticeTitleCell.addEventListener("click", () => {
            if (notice.noticeType == 2) {
                window.location.href = `/GroupNoticePage/DetailNoticeDuesPage.html?noticeType=${notice.noticeType}&noticeToken=${notice.noticeToken}&noticeTitle=${notice.noticeTitle}&noticeChangedDate=${notice.noticeChangedDate}&noticeEndDate=${notice.noticeEndDate}&noticeImportance=${notice.noticeImportance}&noticeStatus=${notice.noticeStatus}&userDuesStatus=${notice.userDuesStatus}&noticeDues=${notice.noticeDues}`;
            } else {
                loadNoticeDeailModal(notice);
            }
        });

        // Í∏àÏï° ÏÖÄ  
        const noticeDuesCell = noticeRow.insertCell();
        if (notice.noticeType == 2) {
            // ÌöåÎπÑ ÎåÄÏÉÅÏûê Ï¥ù Î©§Î≤Ñ Ïàò Í≥ÑÏÇ∞
            const softwareUsers = data[2]; // ÏÜåÌîÑÌä∏Ïõ®Ïñ¥ Ïú†Ï†Ä Ï†ïÎ≥¥
            let totalDuesMember = softwareUsers.length;
            let totalDuesNotUsers = data[3].length;
            let dues = notice.noticeDues * (totalDuesMember + totalDuesNotUsers);
            
            totalDues += dues;  // Îß® ÏïÑÎûòÏóê Í∞ÄÍ≥ÑÎ∂Ä Ïª®ÌÖåÏù¥ÎÑàÏóê Îì§Ïñ¥Í∞à Ï§ÄÎπÑ
            noticeDuesCell.textContent = `${dues}Ïõê`;  // Ìï¥Îãπ Í≥µÏßÄÏÇ¨Ìï≠ÏóêÏÑú Î∞õÏïÑÏïºÌï† Ï¥ù ÌöåÎπÑ Í∏àÏï°
        } else {
            noticeDuesCell.textContent = `${notice.noticeDues}Ïõê`; 
        }

        // ÎÇ©Î∂ÄÎêú ÌöåÎπÑ Í∏àÏï° ÏÖÄ 
        const paidDuesCell = noticeRow.insertCell();
        if (notice.noticeType == 2) {
            // ÌöåÎπÑ ÎÇ©Î∂ÄÏûê Î©§Î≤Ñ Ïàò Í≥ÑÏÇ∞
            const softwareUsers = data[2]; // ÏÜåÌîÑÌä∏Ïõ®Ïñ¥ Ïú†Ï†Ä Ï†ïÎ≥¥
            let totalPaidDuesMember = softwareUsers.filter(user => user.duesStatus == 1).length;

            const notSoftwareUsers = data[3]; // ÏÜåÌîÑÌä∏Ïõ®Ïñ¥ ÎπÑÏú†Ï†Ä Ï†ïÎ≥¥
            let totalPaidDuesNotUserMember = notSoftwareUsers.filter(user => user.duesStatus == 1).length;

            const totalPaidMembers = totalPaidDuesMember + totalPaidDuesNotUserMember

            let paidDues = notice.noticeDues * totalPaidMembers;
            totalDuesPaid += paidDues;  // Îß® ÏïÑÎûòÏóê Í∞ÄÍ≥ÑÎ∂Ä Ïª®ÌÖåÏù¥ÎÑàÏóê Îì§Ïñ¥Í∞à Ï§ÄÎπÑ
            paidDuesCell.textContent = `${paidDues}Ïõê`;  // Ìï¥Îãπ Í≥µÏßÄÏÇ¨Ìï≠ÏóêÏÑú Î∞õÏùÄ ÌöåÎπÑ Í∏àÏï°
        } else {
            paidDuesCell.textContent = ``;
        }

        // ÎÇ©Î∂Ä Ïó¨Î∂Ä ÏÖÄ -- ÏïÑÏßÅ ÎØ∏Í∞úÎ∞ú
        const duesStatusCell = noticeRow.insertCell();
        const duesStatus = getData[noticeIndex][1][0]?.duesStatus; // Ïú†Ìö®Ìïú Ïù∏Îç±Ïä§ ÌôïÏù∏
        if (notice.noticeType == 2) {
            if (duesStatus == 1) {
                duesStatusCell.style.color = 'blue';
                duesStatusCell.textContent = 'ÏôÑÎ£å';
            } else {
                duesStatusCell.style.color = 'red';
                duesStatusCell.textContent = 'ÎØ∏ÎÇ©';
            }
        }

    });

    return table;
}


// Í≤ÄÏÉâ Í∏∞Îä• Ï¥àÍ∏∞Ìôî (ÏßÄÏ∂ú ÎÇ¥Ïó≠ÏùÑ ÎåÄÏÉÅÏúºÎ°ú Í≤ÄÏÉâ)
function initSearchFunctionality() {
    const searchBox = document.querySelector('#search-box');
    const duesTable = document.querySelector('#duesTable tbody');

    searchBox.addEventListener('keyup', function() {
        const filterValue = searchBox.value.toLowerCase();
        const rows = duesTable.querySelectorAll('tr');

        rows.forEach(row => {
            const noticeTitleCell = row.querySelector('td:nth-child(3)');
            const cellText = noticeTitleCell.textContent.toLowerCase();
            row.style.display = cellText.includes(filterValue) ? '' : 'none';
        });
    });
}


// Í∞ÄÍ≥ÑÎ∂Ä Îç∞Ïù¥ÌÑ∞Î•º Ï∂îÍ∞Ä Ìï®Ïàò
function createLedgerContainer() {
    const ledgerContainer = document.getElementById('ledger-container');

    let totalExpenditure = 0;
    let totalIncome = 0;

    getData.forEach(data => {
        const notice = data[0]
        if (notice.noticeType == 4) {  // ÏßÄÏ∂ú ÎÇ¥Ïó≠
            totalExpenditure += parseInt(notice.noticeDues);
        } else if (notice.noticeType == 3) {  // ÏûÖÍ∏à ÎÇ¥Ïó≠
            totalIncome += parseInt(notice.noticeDues);
        }
    });

    // ÌòÑÏû¨ Ï°∞ÏßÅ ÏûêÍ∏à Í≥ÑÏÇ∞ (ÏûÖÍ∏à + ÌöåÎπÑ - ÏßÄÏ∂ú)
    const currentFunds = totalIncome + totalDuesPaid - totalExpenditure;

    // Í∞Å Ìï≠Î™©Ïùò HTML ÏöîÏÜå ÏÉùÏÑ±
    const expenditureElement = document.createElement('p');
    expenditureElement.textContent = `Ï¥ù ÏßÄÏ∂ú Í∏àÏï°: ${totalExpenditure} Ïõê`;

    const incomeElement = document.createElement('p');
    incomeElement.textContent = `Ï¥ù ÏûÖÍ∏à Í∏àÏï°: ${totalIncome} Ïõê`;

    const duesRequestedElement = document.createElement('p');
    duesRequestedElement.textContent = `Ï¥ù ÌöåÎπÑ ÏöîÏ≤≠ Í∏àÏï°: ${totalDues} Ïõê`;

    const duesIncomeElement = document.createElement('p');
    duesIncomeElement.textContent = `Ï¥ù ÌöåÎπÑ ÎÇ©Î∂Ä Í∏àÏï°: ${totalDuesPaid} Ïõê`;

    const currentFundsElement = document.createElement('p');
    currentFundsElement.textContent = `ÌòÑÏû¨ Ï°∞ÏßÅ ÏûêÍ∏à: ${currentFunds} Ïõê`;

    // Í≥ÑÏÇ∞Îêú Îç∞Ïù¥ÌÑ∞Î•º Ïª®ÌÖåÏù¥ÎÑàÏóê Ï∂îÍ∞Ä
    ledgerContainer.appendChild(expenditureElement);
    ledgerContainer.appendChild(incomeElement);
    ledgerContainer.appendChild(duesRequestedElement);
    ledgerContainer.appendChild(duesIncomeElement);
    ledgerContainer.appendChild(currentFundsElement);
}


function loadNoticeDeailModal(notice) {
    const overlay = document.getElementById('overlay');
    const noticeDetailModal = document.getElementById('noticeDetailModal');

    overlay.classList.remove('hidden');
    overlay.classList.add('visible');
    noticeDetailModal.classList.remove('hidden');
    noticeDetailModal.classList.add('visible');

    fetch('DuesNoticeDetailModal.html') 
		.then(response => response.text())
		.then(data => {
			const noticeDetailModal = document.getElementById('noticeDetailModal');
			noticeDetailModal.innerHTML = data;

			// Î™®Îã¨ Îã´Í∏∞ Î≤ÑÌäº Ïù¥Î≤§Ìä∏ Ï∂îÍ∞Ä
			const closeModalBtn = noticeDetailModal.querySelector('#closeModalBtn');
			if (closeModalBtn) {
				closeModalBtn.addEventListener('click', function() {
					const overlay = document.getElementById('overlay');
					overlay.classList.remove('visible');
					overlay.classList.add('hidden');
					noticeDetailModal.classList.remove('visible');
					noticeDetailModal.classList.add('hidden');
				});
			}

			const noticeContainer = document.getElementById('notice-container');
            const endDateText = notice.noticeEndDate ? notice.noticeEndDate : 'ÏóÜÏùå';

            noticeContainer.innerHTML = `
            <div class="notice-info">
                <h1> ${notice.noticeTitle} </h1>
                Í∏àÏï°: ${notice.noticeDues}Ïõê
            </div>
            <div class="notice-dates">
                ÎßàÏßÄÎßâ ÏàòÏ†ïÏùº: ${notice.noticeEditDate} | Ï¢ÖÎ£åÏùº: ${endDateText}
            </div>
            <h2 class="notice-textContent">
                ${notice.noticeContent}
            </h2>
        `;

		})

		.catch(error => console.error('Error loading template:', error));


}